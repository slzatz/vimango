[RenderHeader] Not handled
[Document] Not Handled
[cr()] LH=14
[Heading (1, entering)] Container
  Text 'QPSI on the m4'

-[Text] QPSI on the m4
-[Heading (leaving)] 
-[cr()] LH=29
[Paragraph (entering)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Text] 
-[Link (entering)] Destination[https://learn.adafruit.com/adafruit-hallowing-m4/using-spi-flash] Title[]
-[Text] using-spi-flash
-[Link (leaving)] 
[Text]  
-[Link (entering)] Destination[https://github.com/adafruit/Adafruit_SPIFlash] Title[]
-[Text] Adafruit_SPIFlash
-[Link (leaving)] 
[Text]  
-[Link (entering)] Destination[https://github.com/tinygo-org/tinygo/issues/655] Title[]
-[Text] tinygo issue 655 board support: adafruit feather m4 express
-[Link (leaving)] 
[Paragraph (leaving)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[cr()] LH=14
[Heading (4, entering)] Container
  Text 'The approach that worked was to forge…'

-[Text] The approach that worked was to forget about file systems and just write files directly to flash using the tinygo flash package.
-[Heading (leaving)] 
-[cr()] LH=23
[Paragraph (entering)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Text] The steps:
[Paragraph (leaving)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Ordered List (entering)] Container
  ListItem 'flags=ordered start'
    Paragraph
      Text 'Using bossac transfer to the Adafruit…'
      Strong
        Text 'console_example.go'
      Text 'that is package console_example. The…'
    CodeBlock: '1. replace tinygo.org/x/drivers v0.2…'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Erase the flash - by running minicom …'
      Code 'erase chip 0'
      Text '- the last arg (0) isn't used and ca…'
      Code '<hex address> [size of hexdump if byt…'
      Text 'command and all you should see is'
      Code 'ff ff ff ...'
      Text 'everywhere.'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Leave the space from 0 to 4000 hex fr…'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Go into code/serial and activate the …'
      Code '. bin/active'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'write the first 14.8 kb dithered file…'
      Code 'python transfer2.py 4000 albert_einst…'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'write the next 14.8 kb file starting …'
      Code 'python transfer2.py charles_darwin.bd…'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'Write the next 14.8 kb file starting …'
  ListItem 'flags=ordered'
    Paragraph
      Text '... write the next 14.8kb file ...'
  ListItem 'flags=ordered end'
    Paragraph
      Text 'Now go into ~/code/draw_images and co…'

[... List Left Margin] set to 58.338
-[Ordered Item (entering) #1] Container
  Paragraph
    Text 'Using bossac transfer to the Adafruit…'
    Strong
      Text 'console_example.go'
    Text 'that is package console_example. The…'
  CodeBlock: '1. replace tinygo.org/x/drivers v0.2…'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Using bossac transfer to the Adafruit m4 the compiled main.go program in ~/code/flash.  All this program does is run a simple console application called 
--[Strong (entering)] 
--[Text] console_example.go
--[Strong (leaving)] 
--[Text]  that is package console_example. The modifications include:
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Codeblock] Leaf '1. replace tinygo.org/x/drivers v0.2…'

--[cr()] LH=14
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Using bossac transfer to the Adafruit…'
    Strong
      Text 'console_example.go'
    Text 'that is package console_example. The…'
  CodeBlock: '1. replace tinygo.org/x/drivers v0.2…'

-[Ordered Item (entering) #2] Container
  Paragraph
    Text 'Erase the flash - by running minicom …'
    Code 'erase chip 0'
    Text '- the last arg (0) isn't used and ca…'
    Code '<hex address> [size of hexdump if byt…'
    Text 'command and all you should see is'
    Code 'ff ff ff ...'
    Text 'everywhere.'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Erase the flash - by running minicom and typing 
--[processCode] erase chip 0
--[Backtick (entering)] 
--[Text]  - the last arg (0) isn't used and can be anything. After that command succeeds you can check if the erase worked by using the xxd 
--[processCode] <hex address> [size of hexdump if bytes]
--[Backtick (entering)] 
--[Text]  command and all you should see is 
--[processCode] ff ff ff ...
--[Backtick (entering)] 
--[Text]  everywhere.
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Erase the flash - by running minicom …'
    Code 'erase chip 0'
    Text '- the last arg (0) isn't used and ca…'
    Code '<hex address> [size of hexdump if byt…'
    Text 'command and all you should see is'
    Code 'ff ff ff ...'
    Text 'everywhere.'

-[Ordered Item (entering) #3] Container
  Paragraph
    Text 'Leave the space from 0 to 4000 hex fr…'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Leave the space from 0 to 4000 hex free for storing other info (wifi, number of files, addresses ...)
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Leave the space from 0 to 4000 hex fr…'

-[Ordered Item (entering) #4] Container
  Paragraph
    Text 'Go into code/serial and activate the …'
    Code '. bin/active'
    Text

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Go into code/serial and activate the virtual environment with 
--[processCode] . bin/active
--[Backtick (entering)] 
--[Text] 
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Go into code/serial and activate the …'
    Code '. bin/active'
    Text

-[Ordered Item (entering) #5] Container
  Paragraph
    Text 'write the first 14.8 kb dithered file…'
    Code 'python transfer2.py 4000 albert_einst…'
    Text

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] write the first 14.8 kb dithered file to the flash at 4000 hex (16384 decimal) 
--[processCode] python transfer2.py 4000 albert_einstein.bd
--[Backtick (entering)] 
--[Text] 
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'write the first 14.8 kb dithered file…'
    Code 'python transfer2.py 4000 albert_einst…'
    Text

-[Ordered Item (entering) #6] Container
  Paragraph
    Text 'write the next 14.8 kb file starting …'
    Code 'python transfer2.py charles_darwin.bd…'
    Text

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] write the next 14.8 kb file starting at 8000 hex 
--[processCode] python transfer2.py charles_darwin.bd 8000
--[Backtick (entering)] 
--[Text] 
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'write the next 14.8 kb file starting …'
    Code 'python transfer2.py charles_darwin.bd…'
    Text

-[Ordered Item (entering) #7] Container
  Paragraph
    Text 'Write the next 14.8 kb file starting …'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Write the next 14.8 kb file starting at c000 hex
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Write the next 14.8 kb file starting …'

-[Ordered Item (entering) #8] Container
  Paragraph
    Text '... write the next 14.8kb file ...'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] ... write the next 14.8kb file ...
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text '... write the next 14.8kb file ...'

-[Ordered Item (entering) #9] Container
  Paragraph
    Text 'Now go into ~/code/draw_images and co…'

-[cr()] LH=14
--[Paragraph (entering)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[First Para within a list] breaking
--[Text] Now go into ~/code/draw_images and compile main.go and transfer to the m4 express and you should see rotating pictures You just read 14.8kb (decimal) from a beginning address (eg 4000, 8000, c000 hex ...)
--[Paragraph (leaving)] 
--[... Margins (left, top, right, bottom:] 98.322 28.35 28.35 56.7
--[Ordered Item (leaving)] Container
  Paragraph
    Text 'Now go into ~/code/draw_images and co…'

-[Ordered List (leaving)] Container
  ListItem 'flags=ordered start'
    Paragraph
      Text 'Using bossac transfer to the Adafruit…'
      Strong
        Text 'console_example.go'
      Text 'that is package console_example. The…'
    CodeBlock: '1. replace tinygo.org/x/drivers v0.2…'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Erase the flash - by running minicom …'
      Code 'erase chip 0'
      Text '- the last arg (0) isn't used and ca…'
      Code '<hex address> [size of hexdump if byt…'
      Text 'command and all you should see is'
      Code 'ff ff ff ...'
      Text 'everywhere.'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Leave the space from 0 to 4000 hex fr…'
  ListItem 'flags=ordered'
    Paragraph
      Text 'Go into code/serial and activate the …'
      Code '. bin/active'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'write the first 14.8 kb dithered file…'
      Code 'python transfer2.py 4000 albert_einst…'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'write the next 14.8 kb file starting …'
      Code 'python transfer2.py charles_darwin.bd…'
      Text
  ListItem 'flags=ordered'
    Paragraph
      Text 'Write the next 14.8 kb file starting …'
  ListItem 'flags=ordered'
    Paragraph
      Text '... write the next 14.8kb file ...'
  ListItem 'flags=ordered end'
    Paragraph
      Text 'Now go into ~/code/draw_images and co…'

-[... Reset List Left Margin] re-set to 28.35
[cr()] LH=14
[Paragraph (entering)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Text] The tinygo flash package has a console app that is similar to the tinyfs console app that allows you to issue commands.
[Paragraph (leaving)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Paragraph (entering)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Text] ==Note== that there is a directory ~/code/images that converts a jpg into a bit vector dithered image. the syntax is just ./main neil_young.jpg
[Paragraph (leaving)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Paragraph (entering)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Text] hex address|base 10|file name -----------|-------|--------- 0x4000|16384|albert
[Emph (entering)] 
[Text] einstein.bd 0x8000|32768|charles
[Emph (leaving)] 
[Text] darwin.bd 0xc000|49152|joan
[Emph (entering)] 
[Text] didion.bd 0x10000|65536|neil
[Emph (leaving)] 
[Text] young.bd 0x14000|81920|patty
[Emph (entering)] 
[Text] griffin.bd 0x18000|98304|paul
[Emph (leaving)] 
[Text] dirac.bd 0x1c000|114688|philip
[Emph (entering)] 
[Text] larkin.bd 0x20000|131072|rob
[Emph (leaving)] 
[Text] pike.bd
[Paragraph (leaving)] 
[... Margins (left, top, right, bottom:] 28.35 28.35 28.35 56.7
[cr()] LH=14
[Document] Not Handled
